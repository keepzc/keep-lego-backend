name: 自动部署新版本到服务器
# 特定的 tags被 push的时候触发
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  publish-release:
    runs-on: ubuntu-latest
    steps:
      # checkout 代码
      - uses: actions/checkout@v3
      # 创建 .env 文件
      - name: create env file
        run: |
          touch .env
          echo ALC_ACCESS_KEY=${{ secrets.ALC_ACCESS_KEY }} >> .env
          echo ALC_SECRET_KEY=${{ secrets.ALC_SECRET_KEY }} >> .env
          echo GITEE_CID=${{ secrets.GITEE_CID }} >> .env
          echo GITEE_SECRET=${{ secrets.GITEE_SECRET }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo OSS_ENDPOINT=${{ secrets.OSS_ENDPOINT }} >> .env
          echo MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }} >> .env
          echo MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }} >> .env
          echo MONGO_DB_USERNAME=${{ secrets.MONGO_DB_USERNAME }} >> .env
          echo MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_PASSWORD }} >> .env
          echo REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} >> .env
          echo PING_ENV=${{ secrets.PING_ENV }} >> .env
      # 使用阿里云ACR 完成 docker login
      - name: Login to Aliyun Container Registry (ACR)
        uses: aliyun/acr-login@v1
        with:
          login-server: registry.cn-beijing.aliyuncs.com
          region-id: cn-beijing
          username: '${{ secrets.ACR_USERNAME }}'
          password: '${{ secrets.ACR_PASSWORD }}'
      # 使用正确的阿里云 tag 进行 docker build
      - name: Build image for ACR Docker
        run: docker build --tag "registry.cn-beijing.aliyuncs.com/keepzc/lego:${{ github.ref_name }}" .
      # 使用标记的tags进行 push
      - name: Push image to ACR
        run: docker push registry.cn-beijing.aliyuncs.com/keepzc/lego:${{ github.ref_name }}
      # 查找 docker-compose-online 文件，并且完成版本替换
      - name: find and replace
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: '{{tag}}'
          replace: ${{github.ref_name}}
          include: 'docker-compose-online.yml'
      - run: cat docker-compose-online.yml
      # 拷贝必须文件到一个文件夹，包括 .env, docker-compose-online.yml, mongo-entrypoint
      - name: copy necessary files in to one folder
        run: |
          mkdir lego-backend
          cp .env docker-compose-online.yml lego-backend
          cp -r mongo-entrypoint lego-backend
          ls -a lego-backend
      # 通过 scp 拷贝必须文件到服务器
      - name: copy lego-backend folder via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWD }}
          source: 'lego-backend'
          target: '~'
      # 通过SSH登录 然后重启服务
      - name: excuting ssh and restart docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWD }}
          script_stop: true
          # *登录阿里云 ACR
          # *停止服务 docker-compose down
          # *停止服务 docker-compose up -d
          # *清理工作 rm -rf .env
          # *退出阿里云 ACR docker logout
          script: |
            docker login --username=${{ secrets.ACR_USERNAME }} --password=${{ secrets.ACR_PASSWORD }} registry.cn-beijing.aliyuncs.com
            cd ~/lego-backend/
            docker-compose -f docker-compose-online.yml down
            docker-compose -f docker-compose-online.yml up -d
            rm -rf .env
            docker logout registry.cn-beijing.aliyuncs.com
